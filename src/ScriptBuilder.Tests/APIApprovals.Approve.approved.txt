namespace NServiceBus.Persistence.Sql
{
    public class ErrorsException : System.Exception
    {
        public ErrorsException(string message) { }
        public string FileName { get; set; }
    }
}
namespace NServiceBus.Persistence.Sql.ScriptBuilder
{
    public enum BuildSqlVariant
    {
        MsSqlServer = 0,
        MySql = 1,
    }
    public class CorrelationProperty
    {
        public CorrelationProperty(string name, NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationPropertyType type) { }
        public string Name { get; }
        public NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationPropertyType Type { get; }
    }
    public enum CorrelationPropertyType
    {
        String = 0,
        DateTime = 1,
        DateTimeOffset = 2,
        Int = 3,
        Guid = 4,
    }
    public class static MsSqlServerCorrelationPropertyTypeConverter
    {
        public static string GetColumnType(NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationPropertyType propertyType) { }
    }
    public class static MySqlCorrelationPropertyTypeConverter
    {
        public static string GetColumnType(NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationPropertyType propertyType) { }
    }
    public class static OutboxScriptBuilder
    {
        public static void BuildCreateScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildCreateScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static void BuildDropScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildDropScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
    }
    public class SagaDefinition
    {
        public SagaDefinition(string tableSuffix, string name, NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationProperty correlationProperty, NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationProperty transitionalCorrelationProperty = null) { }
        public SagaDefinition(string tableSuffix, string name) { }
        public NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationProperty CorrelationProperty { get; }
        public bool IsAlwaysStartNew { get; }
        public string Name { get; }
        public string TableSuffix { get; }
        public NServiceBus.Persistence.Sql.ScriptBuilder.CorrelationProperty TransitionalCorrelationProperty { get; }
    }
    public class static SagaScriptBuilder
    {
        public static string BuildCreateScript(NServiceBus.Persistence.Sql.ScriptBuilder.SagaDefinition saga, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static void BuildCreateScript(NServiceBus.Persistence.Sql.ScriptBuilder.SagaDefinition saga, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant, System.IO.TextWriter writer) { }
        public static void BuildDropScript(NServiceBus.Persistence.Sql.ScriptBuilder.SagaDefinition saga, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant, System.IO.TextWriter writer) { }
        public static string BuildDropScript(NServiceBus.Persistence.Sql.ScriptBuilder.SagaDefinition saga, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
    }
    public class static SubscriptionScriptBuilder
    {
        public static void BuildCreateScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildCreateScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static void BuildDropScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildDropScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
    }
    public class static TimeoutScriptBuilder
    {
        public static void BuildCreateScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildCreateScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static void BuildDropScript(System.IO.TextWriter writer, NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
        public static string BuildDropScript(NServiceBus.Persistence.Sql.ScriptBuilder.BuildSqlVariant sqlVariant) { }
    }
}